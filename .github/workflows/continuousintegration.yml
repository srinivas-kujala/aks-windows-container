name: Continuous Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]
    
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write
  
env:
  LOCATION: "eastus"

jobs:
 
  execution-steps:
    name: 
    runs-on: ubuntu-latest
    steps:

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        id: checkout
        uses: srinivas-kujala/workflows/.github/actions/checkout@main
        with:
          branch-name: ${{ github.ref_name }}

      # Authenticate to Az CLI using OIDC
      - name: 'Az CLI login'
        uses: srinivas-kujala/workflows/.github/actions/azure-login@main
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Checks that all Bicep configuration files adhere to a canonical format
      - name: Bicep Lint
        uses: Azure/cli@v1
        with:
          inlineScript: az bicep build --file ./infrastructure/main.bicep

      # Validate whether a template is valid at subscription scope
      - name: Bicep Validate
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az deployment sub validate \
              --name validate-${{ github.run_id }} \
              --template-file./Infrastructure/main.bicep \
              --parameters .\main.bicepparam \
              --location $LOCATION
              
      # Preview changes
      - name: "What-If"
        uses: Azure/cli@v1
        with:
          inlineScript: |
            az deployment sub what-if \
              --name whatif-${{ github.run_id }} \
              --template-file ./Infrastructure/main.bicep \
              --parameters .\main.bicepparam \
              --location $LOCATION > whatif
          
        # Create string output of Whatif
      - name: Create String Output
        id: whatif-string
        run: |
          WHATIF=$(cat whatif)
          
          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Whatif Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "$WHATIF" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT
          
      # Publish Terraform Plan as task summary
      - name: Publish Whatif to Task Summary
        env:
          SUMMARY: ${{ steps.whatif-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY
      
      # If this is a PR post the changes
      - name: Push Whatif Output to PR
        if: github.ref != 'refs/heads/main'
        uses: actions/github-script@v6
        env:
          SUMMARY: "${{ steps.whatif-string.outputs.summary }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const body = `${process.env.SUMMARY}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })